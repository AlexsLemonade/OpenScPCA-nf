manifest {
  name = 'openscpca-nf'
  description = 'A workflow to run modules from the OpenScPCA project.'
  homePage = 'https://github.com/AlexsLemonade/openScPCA-nf'
  mainScript = 'main.nf'
  defaultBranch = 'main'
  version = 'v0.1.6'
  nextflowVersion = '>=24.04.0'
  contributors = [
    [
      name: "Joshua A. Shapiro",
      affiliation: "Alex's Lemonade Stand Foundation",
      contribution: ["author"],
      github: "https://github.com/jashapiro",
      orcid: "https://orcid.org/0000-0002-6224-0347",
    ],
    [
      name: "Stephanie J. Spielman",
      affiliation: "Alex's Lemonade Stand Foundation",
      contribution: ["author"],
      github: "https://github.com/sjspielman",
      orcid: "https://orcid.org/0000-0002-9090-4788",
    ],
    [
      name: "Allegra Hawkins",
      affiliation: "Alex's Lemonade Stand Foundation",
      contribution: ["author"],
      github: "https://github.com/allyhawkins",
      orcid: "https://orcid.org/0000-0001-6026-3660",
    ],
  ]
}

nextflow.enable.dsl = 2
nextflow.enable.moduleBinaries = true

plugins {
  id 'nf-schema@2.3.0'
}

// global default parameters for workflows: output buckets are set to staging by default
params {
  release_prefix = "2025-06-30"
  release_bucket = "s3://openscpca-data-release"
  results_bucket = "s3://openscpca-nf-workflow-results-staging"
  sim_bucket = "s3://openscpca-test-data-release-staging"
  annotations_bucket = "s3://openscpca-celltype-annotations-public-access"
  project = "all"

  // URIs to reference files
  gtf_file = 's3://scpca-nf-references/homo_sapiens/ensembl-104/annotation/Homo_sapiens.GRCh38.104.gtf.gz'
  cytoband_file = 'ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/cytoBand.txt.gz'
}

// Load base process config with labels
includeConfig 'config/process_base.config'

// Load container definitions
includeConfig 'config/containers.config'

// include module specific parameters
includeConfig 'config/module_params.config'

profiles {
  standard {
    process {
      executor = 'local'
      resourceLimits = [cpus: 4, memory: 16.GB]
    }
    docker.enabled = true
    docker.runOptions = '--platform linux/amd64'
  }
  testing {
    params {
      release_prefix = "test"
      release_bucket = "s3://openscpca-test-data-release-public-access"
      results_bucket = "test/results"
      sim_bucket = "test/simulated"
      project = "SCPCP000012"
    }
    process {
      executor = 'local'
      resourceLimits = [cpus: 4, memory: 16.GB]
    }
    docker.enabled = true
    docker.runOptions = '--platform linux/amd64'
    aws.client.anonymous = true
  }
  prod {
    params {
      results_bucket = "s3://openscpca-nf-workflow-results"
      sim_bucket = "s3://openscpca-test-data-release-public-access"
    }
  }
  simulated {
    params {
      release_prefix = "test"
      release_bucket = "s3://openscpca-test-data-release-staging"
      results_bucket = "s3://openscpca-test-workflow-results-staging"
    }
  }
  prod_simulated {
    params {
      release_prefix = "test"
      release_bucket = "s3://openscpca-test-data-release-public-access"
      results_bucket = "s3://openscpca-test-workflow-results-public-access"
    }
  }
  stub {
    params {
      release_prefix = "test"
      release_bucket = "s3://openscpca-test-data-release-public-access"
      // test bucket
      results_bucket = "test/stub/results"
      // no output
      sim_bucket = "test/stub/simulated"
      // local output
      annotations_bucket = "test/stub/annotations"
      // local output
      project = "SCPCP000012"
      // a small project

      // Override large reference files for stub testing
      // NBAtlas reference stub
      cell_type_nb_04_nbatlas_url = "${projectDir}/modules/cell-type-neuroblastoma-04/resources/test/NBAtlas_test.rds"

      // scimilarity model stub
      cell_type_scimilarity_model = "modules/cell-type-scimilarity/resources/test/scimilarity_model"
    }
    process {
      executor = 'local'
      resourceLimits = [cpus: 2, memory: 4.GB]
    }
    docker.enabled = false
    aws.client.anonymous = true
  }

  batch {
    includeConfig 'config/profile_batch.config'
  }
  batch_nvme {
    includeConfig 'config/profile_batch_nvme.config'
  }

  batch_mountpoint {
    includeConfig 'config/profile_batch_mountpoint.config'
  }
}
